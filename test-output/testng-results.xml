<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="13" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-09T19:38:50 AEST" name="Suite" finished-at="2024-09-09T19:39:21 AEST" duration-ms="31017">
    <groups>
    </groups>
    <test started-at="2024-09-09T19:38:50 AEST" name="Test" finished-at="2024-09-09T19:39:21 AEST" duration-ms="31017">
      <class name="testcases.TC008_TestToVerifyCreatePetwithIncorrectJsonFormat">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.TC008_TestToVerifyCreatePetwithIncorrectJsonFormat@5158b42f]" started-at="2024-09-09T19:39:17 AEST" name="setup" finished-at="2024-09-09T19:39:17 AEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createPet_IncorrectJSONFormat()[pri:0, instance:testcases.TC008_TestToVerifyCreatePetwithIncorrectJsonFormat@5158b42f]" started-at="2024-09-09T19:39:17 AEST" name="createPet_IncorrectJSONFormat" finished-at="2024-09-09T19:39:19 AEST" duration-ms="1877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPet_IncorrectJSONFormat -->
      </class> <!-- testcases.TC008_TestToVerifyCreatePetwithIncorrectJsonFormat -->
      <class name="testcases.TC002_TestToVerifyCreatePetwithMissingRequiredFields">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.TC002_TestToVerifyCreatePetwithMissingRequiredFields@515aebb0]" started-at="2024-09-09T19:39:01 AEST" name="setup" finished-at="2024-09-09T19:39:01 AEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createPet_MissingRequiredFields()[pri:0, instance:testcases.TC002_TestToVerifyCreatePetwithMissingRequiredFields@515aebb0]" started-at="2024-09-09T19:39:01 AEST" name="createPet_MissingRequiredFields" finished-at="2024-09-09T19:39:02 AEST" duration-ms="1525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPet_MissingRequiredFields -->
      </class> <!-- testcases.TC002_TestToVerifyCreatePetwithMissingRequiredFields -->
      <class name="testcases.TC004_TestToVerifyGetPetwithInValidData">
        <test-method signature="getPet_InvalidId()[pri:0, instance:testcases.TC004_TestToVerifyGetPetwithInValidData@245b4bdc]" started-at="2024-09-09T19:39:06 AEST" name="getPet_InvalidId" finished-at="2024-09-09T19:39:07 AEST" duration-ms="1249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPet_InvalidId -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.TC004_TestToVerifyGetPetwithInValidData@245b4bdc]" started-at="2024-09-09T19:39:06 AEST" name="setup" finished-at="2024-09-09T19:39:06 AEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- testcases.TC004_TestToVerifyGetPetwithInValidData -->
      <class name="testcases.TC006_TestToVerifyDeletePetwithValidData">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.TC006_TestToVerifyDeletePetwithValidData@6ae5aa72]" started-at="2024-09-09T19:39:10 AEST" name="setup" finished-at="2024-09-09T19:39:10 AEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deletePet_ValidId(java.lang.String)[pri:0, instance:testcases.TC006_TestToVerifyDeletePetwithValidData@6ae5aa72]" started-at="2024-09-09T19:39:10 AEST" name="deletePet_ValidId" data-provider="petIdProvider" finished-at="2024-09-09T19:39:13 AEST" duration-ms="2410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[501]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePet_ValidId -->
        <test-method signature="deletePet_ValidId(java.lang.String)[pri:0, instance:testcases.TC006_TestToVerifyDeletePetwithValidData@6ae5aa72]" started-at="2024-09-09T19:39:13 AEST" name="deletePet_ValidId" data-provider="petIdProvider" finished-at="2024-09-09T19:39:15 AEST" duration-ms="2255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[502]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePet_ValidId -->
      </class> <!-- testcases.TC006_TestToVerifyDeletePetwithValidData -->
      <class name="testcases.TC005_TestToVerifyUpdatePetwithValidData">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.TC005_TestToVerifyUpdatePetwithValidData@6c64cb25]" started-at="2024-09-09T19:39:07 AEST" name="setup" finished-at="2024-09-09T19:39:07 AEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updatePet_ValidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.TC005_TestToVerifyUpdatePetwithValidData@6c64cb25]" started-at="2024-09-09T19:39:07 AEST" name="updatePet_ValidData" data-provider="updatePetProvider" finished-at="2024-09-09T19:39:09 AEST" duration-ms="1215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[501]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[JimmyUpdated]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sold]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Dog]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Friendly]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePet_ValidData -->
        <test-method signature="updatePet_ValidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.TC005_TestToVerifyUpdatePetwithValidData@6c64cb25]" started-at="2024-09-09T19:39:09 AEST" name="updatePet_ValidData" data-provider="updatePetProvider" finished-at="2024-09-09T19:39:10 AEST" duration-ms="1592" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[502]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MaxUpdated]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[available]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Cat]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Playful]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePet_ValidData -->
      </class> <!-- testcases.TC005_TestToVerifyUpdatePetwithValidData -->
      <class name="testcases.TC009_TestToVerifyCreatePetwithInValidFieldType">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.TC009_TestToVerifyCreatePetwithInValidFieldType@595b007d]" started-at="2024-09-09T19:39:19 AEST" name="setup" finished-at="2024-09-09T19:39:19 AEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createPet_InvalidFieldType()[pri:0, instance:testcases.TC009_TestToVerifyCreatePetwithInValidFieldType@595b007d]" started-at="2024-09-09T19:39:19 AEST" name="createPet_InvalidFieldType" finished-at="2024-09-09T19:39:21 AEST" duration-ms="1727" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <500>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor51.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at testcases.TC009_TestToVerifyCreatePetwithInValidFieldType.createPet_InvalidFieldType(TC009_TestToVerifyCreatePetwithInValidFieldType.java:50)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPet_InvalidFieldType -->
      </class> <!-- testcases.TC009_TestToVerifyCreatePetwithInValidFieldType -->
      <class name="testcases.TC003_TestToVerifyGetPetwithValidData">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.TC003_TestToVerifyGetPetwithValidData@dd8ba08]" started-at="2024-09-09T19:39:02 AEST" name="setup" finished-at="2024-09-09T19:39:02 AEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getPet_ValidId(java.lang.String)[pri:0, instance:testcases.TC003_TestToVerifyGetPetwithValidData@dd8ba08]" started-at="2024-09-09T19:39:02 AEST" name="getPet_ValidId" data-provider="petIdProvider" finished-at="2024-09-09T19:39:04 AEST" duration-ms="1838" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[501]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPet_ValidId -->
        <test-method signature="getPet_ValidId(java.lang.String)[pri:0, instance:testcases.TC003_TestToVerifyGetPetwithValidData@dd8ba08]" started-at="2024-09-09T19:39:04 AEST" name="getPet_ValidId" data-provider="petIdProvider" finished-at="2024-09-09T19:39:06 AEST" duration-ms="1883" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[502]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPet_ValidId -->
      </class> <!-- testcases.TC003_TestToVerifyGetPetwithValidData -->
      <class name="testcases.TC007_TestToVerifyDeletePetwithInvalidData">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.TC007_TestToVerifyDeletePetwithInvalidData@222545dc]" started-at="2024-09-09T19:39:15 AEST" name="setup" finished-at="2024-09-09T19:39:15 AEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deletePet_InvalidId()[pri:0, instance:testcases.TC007_TestToVerifyDeletePetwithInvalidData@222545dc]" started-at="2024-09-09T19:39:15 AEST" name="deletePet_InvalidId" finished-at="2024-09-09T19:39:17 AEST" duration-ms="2112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePet_InvalidId -->
      </class> <!-- testcases.TC007_TestToVerifyDeletePetwithInvalidData -->
      <class name="testcases.TC001_TestToVerifyCreatePetwithValidData">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.TC001_TestToVerifyCreatePetwithValidData@5876a9af]" started-at="2024-09-09T19:38:50 AEST" name="setup" finished-at="2024-09-09T19:38:51 AEST" duration-ms="742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createPet_ValidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.TC001_TestToVerifyCreatePetwithValidData@5876a9af]" started-at="2024-09-09T19:38:52 AEST" name="createPet_ValidData" data-provider="petstoreData" finished-at="2024-09-09T19:38:57 AEST" duration-ms="4680" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[501]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Jimmy]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[available]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Dog]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Friendly]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPet_ValidData -->
        <test-method signature="createPet_ValidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.TC001_TestToVerifyCreatePetwithValidData@5876a9af]" started-at="2024-09-09T19:38:57 AEST" name="createPet_ValidData" data-provider="petstoreData" finished-at="2024-09-09T19:38:59 AEST" duration-ms="2090" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[502]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Charlie]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sold]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Cat]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Calm]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPet_ValidData -->
        <test-method signature="createPet_ValidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.TC001_TestToVerifyCreatePetwithValidData@5876a9af]" started-at="2024-09-09T19:38:59 AEST" name="createPet_ValidData" data-provider="petstoreData" finished-at="2024-09-09T19:39:01 AEST" duration-ms="1690" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[503]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Johny]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[pending]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Bunny]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Calm]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPet_ValidData -->
      </class> <!-- testcases.TC001_TestToVerifyCreatePetwithValidData -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
